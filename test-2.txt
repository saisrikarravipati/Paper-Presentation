package policy.enforcement.scope_test

import data.policy.enforcement.scope

# Test when the repository is net new and exactly 60 days have passed.
# - The repo is created on "2024-04-02T00:00:00Z", which is after the net new cutoff ("2024-04-01T00:00:00Z").
# - We compute the expected enforcement date by adding 60 days to the creation date.
# - We override the current time (using "with") to exactly match the expected enforcement date.
# - We then assert that:
#     - is_repo_net_new is true.
#     - is_repo_fully_enforced is true (because the current time equals the enforcement date).
#     - The full_enforcement_Date returned by the policy is the expected formatted date string.
test_net_new_and_fully_enforced {
    # Repository creation date (net new because it's after "2024-04-01T00:00:00Z")
    creation := "2024-04-02T00:00:00Z"
    
    # Compute the expected enforcement date:
    # 1. Parse the creation date into a timestamp (in nanoseconds).
    # 2. Add 60 days (converted to nanoseconds) to that timestamp.
    # 3. Format the resulting timestamp into an ISO8601 date string.
    expected_enforcement := time.format_ns(
        time.add_ns(time.parse_rfc3339_ns(creation), 60 * 24 * 3600 * 1000000000),
        "2006-01-02T15:04:05Z07:00"
    )
    
    # Build the input document with necessary fields.
    input := {
        "repoCreationDate": creation,
        "repoUrl": "dummy_repo",            # Dummy URL for testing ETB scope logic.
        "pipelineAppType": "application",    # Assumed valid per data.valid_types.valid_pipeline_app_type.
        "pipelineFlavor": "flavorA",         # Assumed valid per data.scope_flavors.
    }
    
    # Evaluate the net new flag from the policy.
    net_new := scope.is_repo_net_new with input as input
    
    # Evaluate the fully enforced flag.
    # Here, we override the current time to be the expected enforcement time.
    fully_enforced := scope.is_repo_fully_enforced with input as input with policy.enforcement.scope.current_time_ns as time.parse_rfc3339_ns(expected_enforcement)
    
    # Retrieve the computed full enforcement date from the policy.
    full_due := scope.full_enforcement_Date with input as input

    # Assert the expected outcomes.
    net_new == true
    fully_enforced == true
    full_due == expected_enforcement
}

# Test when the repository is net new but less than 60 days have passed.
# - The repository is still created on "2024-04-02T00:00:00Z".
# - We compute the expected enforcement date the same way as before.
# - We simulate the current time as 30 days after the creation date.
# - Since 30 days is less than the required 60 days, we expect:
#     - is_repo_net_new to be true.
#     - is_repo_fully_enforced to be false.
#     - full_enforcement_Date remains as the computed date (60 days after creation).
test_net_new_but_not_fully_enforced {
    creation := "2024-04-02T00:00:00Z"
    
    # Compute expected enforcement date by adding 60 days to creation.
    expected_enforcement := time.format_ns(
        time.add_ns(time.parse_rfc3339_ns(creation), 60 * 24 * 3600 * 1000000000),
        "2006-01-02T15:04:05Z07:00"
    )
    
    # Simulate current time as 30 days after the creation date.
    simulated_current := time.add_ns(time.parse_rfc3339_ns(creation), 30 * 24 * 3600 * 1000000000)
    
    input := {
        "repoCreationDate": creation,
        "repoUrl": "dummy_repo",
        "pipelineAppType": "application",
        "pipelineFlavor": "flavorA",
    }
    
    # Evaluate net new flag.
    net_new := scope.is_repo_net_new with input as input
    
    # Evaluate fully enforced flag using the simulated current time (30 days later).
    fully_enforced := scope.is_repo_fully_enforced with input as input with policy.enforcement.scope.current_time_ns as simulated_current
    
    # Get the computed full enforcement date (should always be creation date + 60 days).
    full_due := scope.full_enforcement_Date with input as input

    # Assert that:
    # - The repo is net new.
    # - The repo is not fully enforced because current time (30 days later) is less than enforcement date.
    # - The full enforcement date is correctly computed.
    net_new == true
    fully_enforced == false
    full_due == expected_enforcement
}

# Test when the repository is not net new.
# - The repository creation date is set to "2024-03-31T00:00:00Z", which is before the net new cutoff date ("2024-04-01T00:00:00Z").
# - We compute the expected enforcement date as creation + 60 days.
# - We simulate the current time as 70 days after creation (a time that would allow full enforcement if the repo were net new).
# - The expected outcomes are:
#     - is_repo_net_new is false (since creation is before the cutoff).
#     - is_repo_fully_enforced is false.
#     - full_enforcement_Date is computed as creation date + 60 days.
test_not_net_new {
    creation := "2024-03-31T00:00:00Z"
    
    # Compute the expected enforcement date (creation + 60 days).
    expected_enforcement := time.format_ns(
        time.add_ns(time.parse_rfc3339_ns(creation), 60 * 24 * 3600 * 1000000000),
        "2006-01-02T15:04:05Z07:00"
    )
    
    # Simulate current time as 70 days after creation.
    simulated_current := time.add_ns(time.parse_rfc3339_ns(creation), 70 * 24 * 3600 * 1000000000)
    
    input := {
        "repoCreationDate": creation,
        "repoUrl": "dummy_repo",
        "pipelineAppType": "application",
        "pipelineFlavor": "flavorA",
    }
    
    # Evaluate net new flag (expected to be false as creation is before cutoff).
    net_new := scope.is_repo_net_new with input as input
    
    # Evaluate fully enforced flag with simulated current time.
    fully_enforced := scope.is_repo_fully_enforced with input as input with policy.enforcement.scope.current_time_ns as simulated_current
    
    # Retrieve the computed full enforcement date.
    full_due := scope.full_enforcement_Date with input as input

    # Assert expected outcomes:
    # - The repository is not net new.
    # - The repository is not fully enforced.
    # - The computed full enforcement date is as expected.
    net_new == false
    fully_enforced == false
    full_due == expected_enforcement
}
