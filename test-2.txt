import os
import json
import gzip
import requests
from pathlib import Path

def build_opa_body_and_compress(
    input_json_path: Path,
    policy_group: str,
    policy_path: str,
    output_gzip_path: Path
) -> None:
    """
    1. Reads JSON data from input_json_path.
    2. Builds the final OPA body (policy_group, policy_path, input).
    3. Compresses the body to output_gzip_path.
    """
    try:
        # 1. Read the JSON file
        with input_json_path.open('r', encoding='utf-8') as f:
            input_data = json.load(f)
    except Exception as e:
        print(f"[ERROR] Failed reading {input_json_path}: {e}")
        raise

    # 2. Construct the OPA body matching your reference
    opa_body = {
        "policy_group": policy_group,
        "policy_path": policy_path,
        "input": input_data
    }

    # 3. GZIP-compress the final JSON body and write it to disk
    try:
        with gzip.open(output_gzip_path, 'wt', encoding='utf-8') as gz_file:
            json.dump(opa_body, gz_file)
        print(f"[INFO] Successfully created compressed file: {output_gzip_path}")
    except Exception as e:
        print(f"[ERROR] Failed to compress JSON: {e}")
        raise

def post_gzipped_payload(
    gzip_filepath: Path,
    opa_url: str,
    bearer_token: str
) -> None:
    """
    Reads the compressed file from disk and POSTs it to the OPA endpoint
    with the correct headers, including 'Content-Encoding: gzip'.
    """
    headers = {
        "Accept": "application/json;v=2",
        "Authorization": f"Bearer {bearer_token}",
        "Content-Encoding": "gzip"
        # You may also need "Content-Type": "application/json"
        # or "Content-Type": "application/gzip" depending on your server
    }

    try:
        with gzip_filepath.open('rb') as f:
            response = requests.post(opa_url, headers=headers, data=f, verify=False)
            print("[INFO] OPA Response Status Code:", response.status_code)
            print("[INFO] OPA Response Body:", response.text)
    except Exception as e:
        print(f"[ERROR] POST to OPA failed: {e}")
        raise

def main():
    # Adjust to wherever your "test.json" is located
    script_dir = Path(__file__).parent
    input_json_path = script_dir / "resources" / "test.json"

    # The compressed file you want to create
    output_gzip_path = script_dir / "resources" / "test.json.gz"

    # Replace with real values
    policy_group = "my_policy_group"
    policy_path = "my_policy_path"
    opa_url = "https://api-it.cloud.capitalone.com/private/1057890/enterprise-opa-evaluation"
    bearer_token = "<YOUR_AUTH_TOKEN>"

    # Build OPA body -> compress -> output to test.json.gz
    build_opa_body_and_compress(
        input_json_path,
        policy_group,
        policy_path,
        output_gzip_path
    )

    # Now POST that .gz file to OPA
    post_gzipped_payload(
        gzip_filepath=output_gzip_path,
        opa_url=opa_url,
        bearer_token=bearer_token
    )

if __name__ == "__main__":
    main()
